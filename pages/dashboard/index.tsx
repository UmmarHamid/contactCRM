'use client';
import Card from '@/components/Card/Card';
import Heading from '@/components/Heading/Heading';
import Link from 'next/link';
import Head from 'next/head';
import { supabase } from '../../lib/subabaseClient';
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import Text from '@/components/Text/Text';

const Dashboard = ({ poets, books }: any) => {
  const featuredBooks = books.filter((book: any) => book.is_featured);
  const featuredPoets = poets.filter((poet: any) => poet.is_featured);

  var settings = {
    dots: true,
    infinite: true,
    speed: 300,
    slidesToShow: 3,
    slidesToScroll: 1,
    adaptiveHeight: true,
    centerMode: true,
    autoplay: true,
    autoplaySpeed: 2000,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
          infinite: true,
          dots: true,
          adaptiveHeight: true,
          autoplay: true,
          fade: true,
          autoplaySpeed: 2000,
        },
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          adaptiveHeight: true,
          infinite: true,
          fade: true,
          autoplay: true,
          autoplaySpeed: 2000,
        },
      },
      {
        breakpoint: 480,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          adaptiveHeight: true,
          infinite: true,
          autoplay: true,
          fade: false,
          autoplaySpeed: 2000,
        },
      },
    ],
  };
  console.log(featuredPoets);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="root mobile:py-4">
        <Heading
          variant="medium"
          title="Poet's Page"
          extraClasses="font-bold text-center mb-10"
        />
        <div className="mb-20 mx-auto flex flex-col">
          <div className="flex justify-between">
            <Text title="Featured Books" variant="x-large" />
            <Link href={'/books'}>
              <p className="text-xs text-sky-600">View All</p>
            </Link>
          </div>
          <div className="flex gap-4 overflow-scroll">
            {featuredBooks.map((book: any) => (
              <Link key={book.id} href={`/books/${book.id}`}>
                <Card
                  variant="book"
                  title={book.title}
                  description={book.description}
                  imageSrc="/book.avif"
                  category={book.category}
                  date={book.publish_date}
                  authorName={book.author_name}
                  authorImage="/author.webp"
                />
              </Link>
            ))}
          </div>
        </div>
        <div className="mb-20 mx-auto flex flex-col gap-3">
          <div className="flex justify-between">
            <Text title="Featured Poets" variant="x-large" />
            <Link href={'/poets'}>
              <p className="text-xs text-sky-600">View All</p>
            </Link>
          </div>
          <div className="flex gap-4 overflow-scroll">
            {featuredPoets.map((poet: any) => (
              <>
                <Link key={poet.id} href={`/poets/${poet.id}`}>
                  <Card
                    variant="poet"
                    title={poet.name}
                    description={poet.biography}
                    imageSrc="/poet2.svg"
                  />
                </Link>
              </>
            ))}
          </div>
        </div>
      </div>
    </>
  );
};

export default Dashboard;

export async function getServerSideProps() {
  const { data: poets } = await supabase.from('poets').select();
  const { data: books } = await supabase.from('book_list').select();
  return {
    props: {
      poets: poets,
      books: books,
    },
  };
}
